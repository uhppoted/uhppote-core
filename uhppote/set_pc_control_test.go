package uhppote

import (
	"net"
	"testing"
)

func TestSetPCControl(t *testing.T) {
	message := []byte{
		0x17, 0xa0, 0x00, 0x00, 0x2d, 0x55, 0x39, 0x19, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	}

	expected := true

	u := uhppote{
		driver: &stub{
			send: func(addr *net.UDPAddr, request []byte, handler func([]byte) bool) error {
				handler(message)
				return nil
			},
		},
	}

	enabled, err := u.SetPCControl(423187757, true)
	if err != nil {
		t.Fatalf("Unexpected error returned from SetPCControl (%v)", err)
	}

	if enabled != expected {
		t.Errorf("Invalid response:\nexpected:%#v\ngot:     %#v", expected, enabled)
	}
}

func TestSetPCControlWithInvalidDeviceID(t *testing.T) {
	u := uhppote{}

	_, err := u.SetPCControl(0, true)
	if err == nil {
		t.Fatalf("Expected 'Invalid device ID' error, got %v", err)
	}
}
